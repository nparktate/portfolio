---
interface Props {
  sections: {
    slug: string;
    data: {
      title: string;
      order: number;
    };
  }[];
}

const { sections } = Astro.props;
---

<nav class="fixed top-0 left-0 w-full z-50 bg-white/95 backdrop-blur-md shadow-sm transition-all duration-300" id="main-nav">
  <div class="max-w-6xl mx-auto px-4 sm:px-6">
    <div class="flex justify-between items-center py-4 md:py-5">
      <!-- Logo/home -->
      <a href="/" class="text-xl font-serif font-bold tracking-tight text-gray-900 hover:text-primary-600 transition relative group">
        <span class="relative z-10">NP</span>
        <span class="absolute bottom-0 left-0 w-0 h-1 bg-primary-500 transition-all duration-300 group-hover:w-full"></span>
      </a>
      
      <!-- Nav links -->
      <div class="hidden md:flex space-x-10">
        {sections.map((section) => (
          <a 
            href={`#${section.slug}`} 
            class="text-base font-medium text-gray-700 hover:text-primary-600 transition relative group"
          >
            <span>{section.data.title}</span>
            <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-primary-500 transition-all duration-300 group-hover:w-full"></span>
          </a>
        ))}
      </div>

      <!-- Mobile menu button -->
      <button class="md:hidden flex items-center justify-center text-gray-800 hover:text-primary-600 focus:outline-none transition-colors" id="mobile-menu-button">
        <span class="sr-only">Menu</span>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-7 h-7">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile menu panel -->
  <div class="md:hidden hidden bg-white/98 backdrop-blur-md absolute w-full left-0 border-t border-gray-100 shadow-md" id="mobile-menu">
    <div class="px-6 py-6 space-y-4">
      {sections.map((section) => (
        <a 
          href={`#${section.slug}`} 
          class="block py-2 text-lg font-serif font-medium text-gray-800 hover:text-primary-600 transition-colors mobile-link"
        >
          {section.data.title}
        </a>
      ))}
    </div>
  </div>
</nav>

<script is:inline>
  // Handle mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileLinks = document.querySelectorAll('.mobile-link');
  const mainNav = document.getElementById('main-nav');
  
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
    
    // Close menu when a link is clicked
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
      });
    });
  }
  
  // Handle scroll behavior for nav
  if (mainNav) {
    let lastScrollY = window.scrollY;
    
    window.addEventListener('scroll', () => {
      if (window.scrollY > 100) {
        mainNav.classList.add('shadow-sm');
        
        // Hide on scroll down, show on scroll up
        if (window.scrollY > lastScrollY) {
          mainNav.classList.add('-translate-y-full');
        } else {
          mainNav.classList.remove('-translate-y-full');
        }
      } else {
        mainNav.classList.remove('shadow-sm');
        mainNav.classList.remove('-translate-y-full');
      }
      
      lastScrollY = window.scrollY;
    });
  }
</script>